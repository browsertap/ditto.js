// Generated by CoffeeScript 1.6.2
(function() {
  var LogClient,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LogClient = (function(_super) {
    __extends(LogClient, _super);

    /*
    */


    function LogClient() {
      this.handle = __bind(this.handle, this);      LogClient.__super__.constructor.call(this);
      this._shim();
    }

    /*
    */


    LogClient.prototype.handle = function(payload) {
      this._ignoreDispatch = true;
      console.log.apply(console, payload.data);
      return this._ignoreDispatch = false;
    };

    /*
    */


    LogClient.prototype._shim = function() {
      var oldLog,
        _this = this;

      oldLog = console.log;
      return console.log = function() {
        oldLog.apply(console, arguments);
        if (_this._ignoreDispatch) {
          return;
        }
        return _this.dispatch({
          event: "log",
          data: Array.prototype.slice.call(arguments, 0)
        });
      };
    };

    return LogClient;

  })(require("../../common/clients/base"));

  module.exports = LogClient;

}).call(this);
